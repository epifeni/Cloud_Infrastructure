{
  // ARM template schema and version
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  // Parameters for deployment customization
  "parameters": {
    // Location for all resources
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    // Public IP SKU
    "publicIpSku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "SKU for the public IP address."
      }
    },
    // Public IP allocation method
    "publicIPAllocationMethod": {
      "type": "string",
      "defaultValue": "Static",
      "metadata": {
        "description": "Allocation method for the public IP address."
      }
    },
    // DNS label prefix for the public IP
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "tusredev001dns",
      "metadata": {
        "description": "DNS label prefix for the public IP address."
      }
    },
    // VM size
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    // VM name
    "vmName": {
      "type": "string",
      "defaultValue": "tusredev001vm",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    // OS version for the VM
    "OSVersion": {
      "type": "string",
      "defaultValue": "2019-Datacenter",
      "metadata": {
        "description": "Version of the operating system."
      }
    },
    // Admin username
    "tanoj": {
      "type": "string",
      "defaultValue": "tanojadmin",
      "metadata": {
        "description": "Admin username for the virtual machine."
      }
    },
    // Admin password (secure)
    "adminPassword": {
      "type": "secureString",
      "defaultValue": "12345678Tu!#",
      "metadata": {
        "description": "Admin password for the virtual machine."
      }
    },
    // Security type for VM
    "securityType": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "TrustedLaunch"
      ],
      "metadata": {
        "description": "Specifies the security type of the VM. Use 'TrustedLaunch' for enhanced security features."
      }
    },
    // Public IP resource name
    "publicIpName": {
      "type": "string",
      "defaultValue": "tusredev001publicip",
      "metadata": {
        "description": "Name of the public IP address resource."
      }
    }
  },

  // Variables for resource names and settings
  "variables": {
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "default",
    "subnetPrefix": "10.0.0.0/24",
    "networkSecurityGroupName": "tusredev001nsg",
    "virtualNetworkName": "tusredev001vnet",
    "nicName": "tusredev001nic",
    "storageAccountName": "tusredev001storage",
    "publicIpName": "tusredev001publicip",
    // Extension settings for Trusted Launch
    "extensionPublisher": "Microsoft.Azure.Security",
    "extensionName": "AzureDefender",
    "extensionVersion": "1.0",
    "maaEndpoint": "https://maa.endpoint",
    "maaTenantName": "tenantName",
    // Security profile for Trusted Launch
    "securityProfileJson": {
      "uefiSettings": {
        "secureBootEnabled": true,
        "vTpmEnabled": true
      }
    }
  },

  // Resource definitions
  "resources": [
    // Premium Storage Account
    {
      "name": "tustgsre02331",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "tags": {
        "displayName": "tustgsre02331",
        "resourceGroupReference": "[resourceGroup().name]"
      },
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Premium_LRS",
        "tier": "Premium"
      }
    },
    // Standard Storage Account
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "tusredev001storage",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
    // Public IP Address
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-03-01",
      "name": "tusredev001publicip",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('publicIpSku')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    // Network Security Group with RDP rule
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-03-01",
      "name": "tusredev001nsg",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-3389",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "3389",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    // Virtual Network with subnet and NSG association
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-03-01",
      "name": "tusredev001vnet",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ]
    },
    // Network Interface Card
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-03-01",
      "name": "tusredev001nic",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ]
    },
    // Virtual Machine with optional Trusted Launch security profile
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "tusredev001vm",
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('tanoj')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').primaryEndpoints.blob]"
          }
        },
        // Conditional security profile for Trusted Launch
        "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), null())]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    // VM Extension for Trusted Launch attestation (conditional)
    {
      "condition": "[and(equals(parameters('securityType'), 'TrustedLaunch'), and(equals(variables('securityProfileJson').uefiSettings.secureBootEnabled, true()), equals(variables('securityProfileJson').uefiSettings.vTpmEnabled, true())))]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-07-01",
      "name": "tusredev001vm/tusredev001extension",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "[variables('extensionPublisher')]",
        "type": "[variables('extensionName')]",
        "typeHandlerVersion": "[variables('extensionVersion')]",
        "autoUpgradeMinorVersion": true,
        "enableAutomaticUpgrade": true,
        "settings": {
          "AttestationConfig": {
            "MaaSettings": {
              "maaEndpoint": "[variables('maaEndpoint')]",
              "maaTenantName": "[variables('maaTenantName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ]
    }
  ],

  // Outputs (none defined)
  "outputs": {}
}


